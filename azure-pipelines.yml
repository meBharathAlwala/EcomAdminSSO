trigger:
- main   # Change this to your GitHub branch name

variables:
  buildConfiguration: 'production'
  angularProjectName: 'EcomAdmin'

stages:
# -------- BUILD STAGE --------
- stage: Build
  displayName: "Build Angular Application"
  jobs:
  - job: BuildAngular
    pool:
      name: 'Default'   # Self-hosted agent pool where VM1 is registered
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: "Install Node.js"

    - script: |
        cd "$(Build.SourcesDirectory)\EcomAdminSSO"
        npm install -g @angular/cli
        npm ci
        ng build --configuration $(buildConfiguration)

        echo "Verifying build output..."
        if exist "dist\$(angularProjectName)\browser" (
            echo "✅ Build output found."
            dir dist\$(angularProjectName)\browser
        ) else (
            echo "❌ Build failed: dist\$(angularProjectName)\browser folder not found."
            exit /b 1
        )
      displayName: "Install Dependencies, Build & Verify Angular Project"

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\EcomAdminSSO\dist\$(angularProjectName)\browser'
        ArtifactName: 'angular-dist'
        publishLocation: 'Container'
      displayName: "Publish Build Artifacts"

# -------- DEPLOY STAGE --------
- stage: Deploy
  displayName: "Deploy to IIS on Azure VM"
  dependsOn: Build
  jobs:
  - deployment: DeployIIS
    environment: 'Production'
    pool:
      name: 'Default' # Self-hosted agent pool
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: angular-dist

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                $source = "$(Pipeline.Workspace)\angular-dist"
                $destination = "C:\MyApps\EcomAdminUI"

                # Clear old files
                if (Test-Path $destination) {
                    Remove-Item $destination\* -Recurse -Force
                }

                # Copy new build files
                Copy-Item "$source\*" $destination -Recurse
                Write-Host "✅ Deployment completed successfully."
