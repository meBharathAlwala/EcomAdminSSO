trigger:
  branches:
    include:
      - Development
      - QA

pr:
  branches:
    include:
      - Development
      - QA

stages:
# ------------------ Dev Build & Deploy ------------------
- stage: BuildAndDeployDev
  displayName: 'Build and Deploy to DEV'
  condition: |
    eq(variables['Build.SourceBranch'], 'refs/heads/Development')
  jobs:
  - job: BuildJobDev
    displayName: 'Build Angular Project (Dev)'
    pool:
      name: 'Default'
      demands:
        - Agent.Name -equals EComAdmin_UI   # <--- Dev agent
    steps:
      - template: build.yml

  - job: DeployJobDev
    displayName: 'Deploy Angular Project to IIS (Dev)'
    dependsOn: BuildJobDev
    condition: succeeded()
    pool:
      name: 'Default'
      demands:
        - Agent.Name -equals agentnameselfhost   # <--- Dev agent
    steps:
      - template: deploy.yml

# ------------------ QA Build & Deploy ------------------
- stage: BuildAndDeployQA
  displayName: 'Build and Deploy to QA'
  condition: |
    eq(variables['Build.SourceBranch'], 'refs/heads/QA')
  jobs:
  - job: BuildJobQA
    displayName: 'Build Angular Project (QA)'
    pool:
      name: 'Default'
      demands:
        - Agent.Name -equals AgentSelefHostedQA   # <--- QA agent
    steps:
      - template: build.yml

  - job: DeployJobQA
    displayName: 'Deploy Angular Project to IIS (QA)'
    dependsOn: BuildJobQA
    condition: succeeded()
    pool:
      name: 'Default'
      demands:
        - Agent.Name -equals AgentSelefHostedQA   # <--- QA agent
    steps:
      - template: deploy.yml
