trigger:
- main

variables:
  buildConfiguration: 'production'

stages:
# -------- BUILD STAGE --------
- stage: Build
  displayName: "Build Angular Application"
  jobs:
  - job: BuildAngular
    pool:
      name: 'Default'
    steps:
    # 1️⃣ Install Node.js
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: "Install Node.js"

    # 2️⃣ Install Angular CLI and dependencies
    - script: |
        echo Installing Angular CLI...
        npm install -g @angular/cli
        echo Installing project dependencies...
        npm install
      displayName: "Install Angular CLI and NPM Packages"

    # 3️⃣ Build Angular Project
    - script: |
        echo Building Angular Project...
        ng build --configuration $(buildConfiguration)
      displayName: "Build Angular Project"

    # 4️⃣ Verify dist output
    - script: |
        echo "Checking build output..."
        if not exist dist\EcomAdmin\browser (
          echo "❌ Build failed: dist\EcomAdmin\browser folder not found."
          exit /b 1
        )
        echo "✅ Build succeeded: dist\EcomAdmin\browser folder exists."
      displayName: "Verify Build Output"

    # 5️⃣ Publish build artifact
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'dist/EcomAdmin/browser'
        ArtifactName: 'angular-dist'
        publishLocation: 'Container'
      displayName: "Publish Angular Build Artifacts"

# -------- DEPLOY STAGE --------
- stage: Deploy
  displayName: "Deploy to IIS on Azure VM"
  dependsOn: Build
  jobs:
  - deployment: DeployIIS
    environment: 'Production'
    pool:
      name: 'Default'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: angular-dist

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                $source = "$(Pipeline.Workspace)\angular-dist"
                $destination = "C:\MyApps\EcomAdminUI"

                Write-Host "Stopping IIS site..."
                Import-Module WebAdministration
                Stop-WebSite -Name "EcomAdminUI"

                Write-Host "Clearing old files..."
                if (Test-Path $destination) {
                    Remove-Item "$destination\*" -Recurse -Force
                }

                Write-Host "Copying new files..."
                Copy-Item "$source\*" $destination -Recurse

                Write-Host "Starting IIS site..."
                Start-WebSite -Name "EcomAdminUI"

                Write-Host "✅ Deployment completed successfully."
